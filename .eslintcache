[{"C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\index.js":"1","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\App.js":"2","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\reportWebVitals.js":"3","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\api\\api.js":"4","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\pages\\Auth\\Signin.js":"5","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\pages\\Auth\\Signup.js":"6","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\pages\\Home\\HomePage.js":"7","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\pages\\Job\\ListApplicants.js":"8","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\pages\\Employer\\ManageJobPosts.js":"9","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\pages\\Job\\CreateJobPage.js":"10","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\pages\\Job\\ApplyJobPage.js":"11","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\pages\\Employee\\ManageApplication.js":"12","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\pages\\Employee\\UpdateProfile.js":"13","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\pages\\Cv\\UploadCvPage.js":"14","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\pages\\Job\\DetailJobPage.js":"15","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\pages\\Employer\\UpdateProfile.js":"16","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\utils\\verifyForm.js":"17","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\utils\\convertVND.js":"18","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\utils\\data.js":"19","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\firebase\\firebase.js":"20","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\components\\Pagination\\Pagination.js":"21","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\components\\Layout\\MainLayout.js":"22","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\components\\Cards\\CardJob.js":"23","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\components\\Cards\\JobTitleCard.js":"24","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\components\\Footer\\Footer.js":"25","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\components\\Cards\\CompanyTitleCard.js":"26","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\components\\SearchBar\\SearchBar.js":"27","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\components\\Navbar\\Navbar.js":"28","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\pages\\Employer\\CompanyPage.js":"29","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\utils\\notiToast.js":"30","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\utils\\NotiToast.js":"31"},{"size":608,"mtime":1636386063982,"results":"32","hashOfConfig":"33"},{"size":4095,"mtime":1641095926651,"results":"34","hashOfConfig":"33"},{"size":375,"mtime":1636386064004,"results":"35","hashOfConfig":"33"},{"size":655,"mtime":1640966098090,"results":"36","hashOfConfig":"33"},{"size":3992,"mtime":1641097487811,"results":"37","hashOfConfig":"33"},{"size":4558,"mtime":1641093056313,"results":"38","hashOfConfig":"33"},{"size":2231,"mtime":1640960321565,"results":"39","hashOfConfig":"33"},{"size":4550,"mtime":1636386064001,"results":"40","hashOfConfig":"33"},{"size":4907,"mtime":1641096414118,"results":"41","hashOfConfig":"33"},{"size":5692,"mtime":1641183747766,"results":"42","hashOfConfig":"33"},{"size":3566,"mtime":1641181169147,"results":"43","hashOfConfig":"33"},{"size":3874,"mtime":1641181258650,"results":"44","hashOfConfig":"33"},{"size":3085,"mtime":1641180786345,"results":"45","hashOfConfig":"33"},{"size":3435,"mtime":1641180890573,"results":"46","hashOfConfig":"33"},{"size":2215,"mtime":1636386064000,"results":"47","hashOfConfig":"33"},{"size":8450,"mtime":1641181734342,"results":"48","hashOfConfig":"33"},{"size":830,"mtime":1636386064008,"results":"49","hashOfConfig":"33"},{"size":222,"mtime":1636386064006,"results":"50","hashOfConfig":"33"},{"size":3702,"mtime":1636386064007,"results":"51","hashOfConfig":"33"},{"size":532,"mtime":1640968884705,"results":"52","hashOfConfig":"33"},{"size":1064,"mtime":1636386063977,"results":"53","hashOfConfig":"33"},{"size":469,"mtime":1641183710216,"results":"54","hashOfConfig":"33"},{"size":1662,"mtime":1636386063967,"results":"55","hashOfConfig":"33"},{"size":2578,"mtime":1636386063969,"results":"56","hashOfConfig":"33"},{"size":394,"mtime":1641095209486,"results":"57","hashOfConfig":"33"},{"size":1236,"mtime":1636386063968,"results":"58","hashOfConfig":"33"},{"size":4728,"mtime":1636386063979,"results":"59","hashOfConfig":"33"},{"size":2006,"mtime":1636386063976,"results":"60","hashOfConfig":"33"},{"size":2883,"mtime":1641095914435,"results":"61","hashOfConfig":"33"},{"size":473,"mtime":1641180704994,"results":"62","hashOfConfig":"33"},{"size":473,"mtime":1641180704994,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1lmjojw",{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\index.js",[],["133","134"],"C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\App.js",["135","136","137"],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport { useState, useEffect, createContext, useRef } from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport HomePage from './pages/Home/HomePage';\r\nimport CompanyPage from './pages/Employer/CompanyPage';\r\nimport Signin from './pages/Auth/Signin';\r\nimport Signup from './pages/Auth/Signup';\r\nimport api from './api/api';\r\nimport { io } from 'socket.io-client';\r\nimport DetailJobPage from './pages/Job/DetailJobPage';\r\nimport ApplyJobPage from './pages/Job/ApplyJobPage';\r\nimport UploadCvPage from './pages/Cv/UploadCvPage';\r\nimport EmployeeUpdateProfile from './pages/Employee/UpdateProfile';\r\nimport EmployerUpdateProfile from './pages/Employer/UpdateProfile';\r\nimport ManageApplication from './pages/Employee/ManageApplication';\r\nimport CreateJobPage from './pages/Job/CreateJobPage';\r\nimport ManageJobPosts from './pages/Employer/ManageJobPosts';\r\nimport ListApplicants from './pages/Job/ListApplicants';\r\n\r\nexport const AuthContext = createContext();\r\nexport const SocketContext = createContext();\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null);\r\n  const [role, setRole] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [resumes, setResumes] = useState(null);\r\n  const socket = useRef(null);\r\n\r\n  const verifyAuth = async (role) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await api({\r\n        url: `/${role}/verify`,\r\n        method: 'GET',\r\n      });\r\n      setLoading(false);\r\n      if (res.success) {\r\n        setUser(res.data);\r\n        setRole(role);\r\n        if (role === 'employee') {\r\n          fetchResumes();\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchResumes = async () => {\r\n    const response = await api({\r\n      url: '/resume',\r\n      method: 'GET',\r\n    });\r\n    if (response.success) setResumes(response.data.resume);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const role = localStorage.getItem('role');\r\n    if (token) verifyAuth(role);\r\n    else setLoading(false);\r\n  }, []);\r\n\r\n  const signin = ({ user, token }) => {\r\n    setUser(user);\r\n    localStorage.setItem('token', token);\r\n    setRole(localStorage.getItem('role'));\r\n    if (localStorage.getItem('role') === 'employee') fetchResumes();\r\n  };\r\n\r\n  const signout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('role');\r\n    setUser(null);\r\n  };\r\n\r\n  if (loading) return <Spinner animation=\"border\" variant=\"dark\" />;\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ user, resumes, setUser, setResumes, role, signin, signout }}\r\n    >\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <HomePage />\r\n          </Route>\r\n          <Route path=\"/signin\" exact>\r\n            <Signin />\r\n          </Route>\r\n          <Route path=\"/signup\" exact>\r\n            <Signup />\r\n          </Route>\r\n          <Route path=\"/company/:id\" exact>\r\n            <CompanyPage />\r\n          </Route>\r\n          <Route path=\"/post/:id\" exact>\r\n            <DetailJobPage />\r\n          </Route>\r\n          <Route path=\"/post/private/:id\" exact>\r\n            <ListApplicants />\r\n          </Route>\r\n          <Route path=\"/apply/:id\" exact>\r\n            <ApplyJobPage />\r\n          </Route>\r\n          <Route path=\"/uploadcv\" exact>\r\n            {role === 'employee' && <UploadCvPage />}\r\n          </Route>\r\n          <Route path=\"/profile\" exact>\r\n            {role === 'employee' && <EmployeeUpdateProfile />}\r\n            {role === 'employer' && <EmployerUpdateProfile />}\r\n          </Route>\r\n          <Route path=\"/applications\" exact>\r\n            {role === 'employee' && <ManageApplication />}\r\n            {role === 'employer' && <ManageJobPosts />}\r\n          </Route>\r\n          <Route path=\"/create\" exact>\r\n            {role === 'employer' && <CreateJobPage />}\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\reportWebVitals.js",[],"C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\api\\api.js",[],"C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\pages\\Auth\\Signin.js",[],"C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\pages\\Auth\\Signup.js",[],"C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\pages\\Home\\HomePage.js",["138","139"],"import SearchBar from '../../components/SearchBar/SearchBar';\r\nimport CardJob from '../../components/Cards/CardJob';\r\nimport MainLayout from '../../components/Layout/MainLayout';\r\nimport api from '../../api/api';\r\nimport { useState, useEffect } from 'react';\r\nimport CustomPagination from '../../components/Pagination/Pagination';\r\n\r\nfunction HomePage() {\r\n  const [posts, setPosts] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [total, setTotal] = useState(0);\r\n  const [limit, setLimit] = useState(4);\r\n  const [queries, setQueries] = useState({});\r\n\r\n  const fetchPosts = async ({\r\n    skills = null,\r\n    range = null,\r\n    location,\r\n    category,\r\n  }) => {\r\n    const params = { page, limit };\r\n\r\n    if (skills) params.key = skills;\r\n    if (range) {\r\n      params.min = range[0];\r\n      params.max = range[1];\r\n    }\r\n    if (category) params.cate = category;\r\n    if (location) params.loc = location;\r\n\r\n    try {\r\n      const res = await api({\r\n        url: '/post',\r\n        method: 'GET',\r\n        params,\r\n      });\r\n\r\n      if (res.success) {\r\n        setPosts(res.data.posts);\r\n        setTotal(res.data.total);\r\n      }\r\n    } catch (e) {\r\n      console.log(e.message);\r\n    }\r\n  };\r\n\r\n  const renderPosts = (posts) => {\r\n    if (posts.length === 0)\r\n      return (\r\n        <div className=\"mt-5 mb-5\">\r\n          <h1>No job found...</h1>\r\n        </div>\r\n      );\r\n    return posts.map((post) => (\r\n      <CardJob\r\n        logo={post.owner.logo}\r\n        locations={post.locations}\r\n        key={post._id}\r\n        title={post.title}\r\n        salary={post.salary}\r\n        id={post._id}\r\n        active={post.active}\r\n      />\r\n    ));\r\n  };\r\n\r\n  const onChangePage = (page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPosts(queries);\r\n  }, [page, queries]);\r\n\r\n  return (\r\n    <MainLayout>\r\n      <SearchBar filterSearch={setQueries} />\r\n      <div className=\"row d-flex justify-content-start ml-3\">\r\n        {renderPosts(posts.filter((post) => post.active))}\r\n      </div>\r\n      <CustomPagination\r\n        current={page}\r\n        total={total}\r\n        onChangePage={onChangePage}\r\n        limit={limit}\r\n      />\r\n    </MainLayout>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\pages\\Job\\ListApplicants.js",["140"],"import MainLayout from '../../components/Layout/MainLayout'\r\nimport {useParams, Redirect} from 'react-router-dom'\r\nimport {ListGroup, Nav, Button, DropdownButton, Dropdown, Badge} from 'react-bootstrap'\r\nimport api from '../../api/api'\r\nimport { useEffect, useState, useContext } from 'react'\r\nimport {AuthContext} from '../../App'\r\nimport {parseISO} from 'date-fns'\r\n\r\nfunction ListApplicants(){\r\n    const {user} = useContext(AuthContext)\r\n    const {id} = useParams()\r\n    const [post,setPost] = useState(null)\r\n    const [filter, setFilter] = useState(\"all\")\r\n\r\n    const getDetailPost = async(id) => {\r\n        try {\r\n            const res = await api({\r\n                url:`/post/private/${id}`,\r\n                method:'GET'\r\n            }) \r\n            if(res.success){\r\n                setPost(res.data)\r\n            }\r\n        } catch (error) {\r\n            console.log(error.message)\r\n        }\r\n    }\r\n\r\n    const rejectApplication = async (appId) => {\r\n        try {\r\n            const res = await api({\r\n                url:`/application/${appId}`,\r\n                method:'PATCH',\r\n                data:{active:'rejected'}\r\n            }) \r\n            if(res.success){\r\n                getDetailPost(id)\r\n            }\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n\r\n    const shortlistApplication = async (appId) => {\r\n        try {\r\n            const res = await api({\r\n                url:`/application/${appId}`,\r\n                method:'PATCH',\r\n                data:{active:'shortlisted'}\r\n            }) \r\n            if(res.success){\r\n                getDetailPost(id)\r\n            }\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n\r\n    const renderPosts = (posts) => {\r\n        return posts.map((post,index) => <ListGroup.Item key={index}>\r\n            <div>\r\n                <strong>Applicant message:</strong> \r\n                <p className=\"mt-2\">{post.message}</p>\r\n            </div>\r\n            <div>\r\n                <strong>Applicant CV:</strong>\r\n                <Nav.Link href={post.resume.link} target=\"_blank\">Click here to download</Nav.Link>\r\n            </div>\r\n            <div>Created At: {parseISO(post.createdAt).toString()}</div>\r\n            <div>\r\n                {post.active === 'pending' && \r\n                    <div className=\"d-flex mt-2\">\r\n                        <Button className=\"mr-4\" variant=\"danger\" onClick={() => rejectApplication(post._id)}>Reject this application</Button>\r\n                        <Button variant=\"info\" onClick={() => shortlistApplication(post._id)}>Shortlist Application</Button>\r\n                    </div>\r\n                }\r\n                {post.active === 'rejected'  && <Badge variant=\"secondary\">Rejected</Badge>}\r\n                {post.active === 'shortlisted' &&  <Badge variant=\"success\">Shortlisted</Badge>}\r\n            </div>\r\n        </ListGroup.Item>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        getDetailPost(id)\r\n\r\n    },[])\r\n\r\n    if(post && post.owner !== user._id) return <Redirect to='/' />\r\n\r\n    return(\r\n        <MainLayout>\r\n            <div className=\"d-flex justify-content-end\">\r\n                <DropdownButton variant=\"secondary\" title=\"Filter Applications\" className=\"ml-5 mr-5 mt-5 pl-5 pr-5 pt-5\">\r\n                    <Dropdown.Item onClick={() => {setFilter(\"all\")}}>All Applications</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => {setFilter(\"active\")}}>Pending Applications</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => {setFilter(\"rejected\")}}>Rejected Applications</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => {setFilter(\"shortlisted\")}}>Shortlisted Applications</Dropdown.Item>\r\n                </DropdownButton>\r\n            </div>\r\n            <ListGroup className=\"ml-5 mr-5 p-5\" variant=\"flush\">\r\n                <h2>{post && post.title}</h2>\r\n                <div className=\"list-applicants\">\r\n                    {(post && filter === \"all\") && renderPosts(post.applications)}\r\n                    {(post && filter === \"active\") && renderPosts(post.applications.filter(app => app.active === 'pending'))}\r\n                    {(post && filter === \"rejected\") && renderPosts(post.applications.filter(app => app.active === 'rejected'))}\r\n                    {(post && filter === \"shortlisted\") && renderPosts(post.applications.filter(app => app.active === 'shortlisted'))}\r\n                </div>\r\n            </ListGroup>\r\n        </MainLayout>\r\n    )\r\n}\r\n\r\nexport default ListApplicants","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\pages\\Employer\\ManageJobPosts.js",["141","142"],"import MainLayout from '../../components/Layout/MainLayout'\r\nimport api from '../../api/api'\r\nimport { ListGroup, Button, DropdownButton, Dropdown, Badge } from 'react-bootstrap'\r\nimport { Redirect, useHistory } from 'react-router-dom'\r\nimport { useState, useEffect, useContext } from 'react'\r\nimport { AuthContext } from '../../App'\r\nimport { parseISO } from 'date-fns'\r\nimport CustomPagination from '../../components/Pagination/Pagination'\r\n\r\nfunction ManageJobPosts() {\r\n    const [posts, setPosts] = useState([])\r\n    const [page, setPage] = useState(1)\r\n    const [total, setTotal] = useState(0)\r\n    const [limit, setLimit] = useState(12)\r\n    const [filter, setFilter] = useState(\"all\")\r\n    const { user, role } = useContext(AuthContext)\r\n    const history = useHistory()\r\n\r\n    const fetchPosts = async () => {\r\n        const params = { page, limit, company: user._id }\r\n        try {\r\n            const res = await api({\r\n                url: '/post',\r\n                method: 'GET',\r\n                params\r\n            })\r\n            if (res.success) {\r\n                setPosts(res.data.posts)\r\n                setTotal(res.data.total)\r\n            }\r\n        } catch (e) {\r\n            console.log(e.message)\r\n        }\r\n    }\r\n\r\n    const closeJob = async (id) => {\r\n        try {\r\n            const res = await api({\r\n                url: `/post/${id}`,\r\n                method: 'PATCH',\r\n                data: { active: false }\r\n            })\r\n            if (res.success) {\r\n                fetchPosts()\r\n            }\r\n\r\n        } catch (error) {\r\n            alert(\"Cannot close job\")\r\n        }\r\n\r\n    }\r\n\r\n    const reOpenJob = async (id) => {\r\n        try {\r\n            const res = await api({\r\n                url: `/post/${id}`,\r\n                method: 'PATCH',\r\n                data: {\r\n                    active: true,\r\n                    createdAt: new Date().toISOString()\r\n                }\r\n            })\r\n            if (res.success) fetchPosts()\r\n        } catch (e) {\r\n            alert(\"Cannot re-open job\")\r\n        }\r\n    }\r\n\r\n    const renderPosts = (posts) => {\r\n        if (posts.length === 0) return (<div className=\"mt-5 mb-5\" ><h1>No job to display...</h1></div>)\r\n        return posts.map((post, index) =>\r\n            <ListGroup.Item key={index} style={{ border: 'solid black 1px', marginTop: '2vh' }}>\r\n                <h3 style={{ cursor: \"pointer\", display: \"inline-block\" }} onClick={() => { history.push(`/post/${post._id}`) }}>\r\n                    {post.title}\r\n                </h3>\r\n                &nbsp;\r\n                {post.active ? <Badge pill variant=\"primary\">active</Badge> : <Badge pill variant=\"warning\">expired</Badge>}\r\n                <div>Created At: {parseISO(post.createdAt).toString()}</div>\r\n                <div className=\"d-flex mt-2 justify-content-between\">\r\n                    <Button variant=\"primary\"\r\n                        onClick={() => history.push(`/post/private/${post._id}`)}\r\n                    >Show Applications</Button>\r\n\r\n                    {!post.active &&\r\n                        <Button variant='info'\r\n                            onClick={() => reOpenJob(post._id)}\r\n                        >Re-open Job</Button>\r\n                    }\r\n\r\n                    {post.active &&\r\n                        <Button variant=\"danger\"\r\n                            onClick={() => closeJob(post._id)}\r\n                        >Close Job</Button>\r\n                    }\r\n                </div>\r\n\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n\r\n    const onChangePage = (page) => {\r\n        setPage(page)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchPosts()\r\n    }, [page])\r\n\r\n    if (!user || role === 'employoee') return <Redirect to='/' />\r\n\r\n    return (\r\n        <MainLayout>\r\n            <div className=\"d-flex justify-content-end\">\r\n                <DropdownButton variant=\"secondary\" title=\"Filter Posts\" className=\"ml-5 mr-5 mt-5 pl-5 pr-5 pt-5\">\r\n                    <Dropdown.Item onClick={() => { setFilter(\"all\") }}>All Posts</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => { setFilter(\"active\") }}>Active Posts</Dropdown.Item>\r\n                    <Dropdown.Item onClick={() => { setFilter(\"expired\") }}>Expired Posts</Dropdown.Item>\r\n                </DropdownButton>\r\n            </div>\r\n\r\n            <ListGroup variant=\"flush\" className=\"ml-5 mr-5 p-5\">\r\n                {filter === \"all\" && renderPosts(posts)}\r\n                {filter === \"active\" && renderPosts(posts.filter(post => post.active))}\r\n                {filter === \"expired\" && renderPosts(posts.filter(post => !post.active))}\r\n            </ListGroup>\r\n\r\n            <CustomPagination\r\n                current={page}\r\n                total={total}\r\n                onChangePage={onChangePage}\r\n                limit={limit}\r\n            />\r\n        </MainLayout>\r\n    )\r\n}\r\n\r\nexport default ManageJobPosts","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\pages\\Job\\CreateJobPage.js",["143"],"C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\pages\\Job\\ApplyJobPage.js",["144"],"C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\pages\\Employee\\ManageApplication.js",["145","146","147","148"],"C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\pages\\Employee\\UpdateProfile.js",["149","150"],"C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\pages\\Cv\\UploadCvPage.js",[],"C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\pages\\Job\\DetailJobPage.js",[],"C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\pages\\Employer\\UpdateProfile.js",[],"C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\utils\\verifyForm.js",[],"C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\utils\\convertVND.js",[],"C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\utils\\data.js",[],"C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\firebase\\firebase.js",[],"C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\components\\Pagination\\Pagination.js",[],"C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\components\\Layout\\MainLayout.js",[],"C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\components\\Cards\\CardJob.js",[],"C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\components\\Cards\\JobTitleCard.js",["151"],"import { useContext } from 'react'\r\nimport {Button} from 'react-bootstrap'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {AuthContext} from '../../App'\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney'\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn'\r\nimport FolderIcon from '@material-ui/icons/Folder'\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey'\r\n\r\nfunction JobTitleCard({title,logo,location,salary,id,keywords,categories,owner,active}){\r\n    const {user,role} = useContext(AuthContext)\r\n    const history = useHistory()\r\n \r\n    const handleClick = () => {\r\n        if(!user) return history.push(\"/signin\")\r\n        history.push(`/apply/${id}`)\r\n    }\r\n\r\n    const redirectCompany = () => {\r\n        history.push(`/company/${owner}`)\r\n    }\r\n\r\n    const renderItems = (items) => {\r\n        if(!items) return <p></p>\r\n        return items.map((item,index) => (\r\n            index !== items.length-1 ? <p className=\"ml-2\" key={index}>{item}, </p> : <p className=\"ml-2\" key={index}>{item} </p>\r\n        ))\r\n    }\r\n \r\n    return(\r\n        <>\r\n            <div className=\"row pb-2\" style={{ borderBottom: \"0.5px solid black\", marginTop: \"6rem\" }}>\r\n                <div className=\"col-md-3\">\r\n                    <img src={logo} style={{ width: '100%' }}/>\r\n                </div>\r\n                <div className=\"col-md-9\">\r\n                    <div className=\"d-flex justify-content-start\">\r\n                        <h2>{title}</h2>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-start mb-2\">\r\n                        <AttachMoneyIcon />\r\n                        {salary}\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-start\">\r\n                        <LocationOnIcon />\r\n                        {renderItems(location)}\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-start\">\r\n                        <FolderIcon />\r\n                        {renderItems(categories)}\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-start\">\r\n                        <VpnKeyIcon />\r\n                        {renderItems(keywords)}\r\n                    </div>\r\n                    {((role!=='employer' || !role) && active) && <Button variant=\"primary\" onClick={handleClick}>Apply Job</Button>}\r\n                    <Button variant=\"info\" className=\"ml-3\" onClick={redirectCompany}>View Company</Button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default JobTitleCard","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\components\\Cards\\CompanyTitleCard.js",[],"C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\components\\SearchBar\\SearchBar.js",[],"C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\pages\\Employer\\CompanyPage.js",["152","153","154","155"],"import CompanyTitleCard from '../../components/Cards/CompanyTitleCard';\r\nimport CardJob from '../../components/Cards/CardJob';\r\nimport MainLayout from '../../components/Layout/MainLayout';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport { useParams } from 'react-router-dom';\r\nimport CustomPagination from '../../components/Pagination/Pagination';\r\nimport { useState, useEffect } from 'react';\r\nimport api from '../../api/api';\r\n\r\nfunction CompanyPage() {\r\n  const [page, setPage] = useState(1);\r\n  const [total, setTotal] = useState(0);\r\n  const [limit, setLimit] = useState(4);\r\n  const { id } = useParams();\r\n  const [posts, setPosts] = useState([]);\r\n  const [company, setCompany] = useState({});\r\n  const [images, setImages] = useState([]);\r\n\r\n  const fetchPosts = async () => {\r\n    const params = { page, limit, company: id };\r\n    try {\r\n      const res = await api({\r\n        url: '/post',\r\n        method: 'GET',\r\n        params,\r\n      });\r\n\r\n      if (res.success) {\r\n        setPosts(res.data.posts);\r\n        setTotal(res.data.total);\r\n      }\r\n    } catch (e) {\r\n      console.log(e.message);\r\n    }\r\n  };\r\n\r\n  const fetchCompany = async () => {\r\n    try {\r\n      const res = await api({\r\n        url: `employer/${id}`,\r\n        method: 'GET',\r\n      });\r\n      if (res.success) {\r\n        setCompany(res.data);\r\n        setImages(res.data.image);\r\n      }\r\n    } catch (e) {\r\n      console.log(e.message);\r\n    }\r\n  };\r\n\r\n  const renderPosts = (posts) => {\r\n    if (posts.length == 0)\r\n      return (\r\n        <div className=\"mt-5 mb-5\">\r\n          <h1>No job from this company...</h1>\r\n        </div>\r\n      );\r\n    return posts.map((post) => (\r\n      <CardJob\r\n        logo={post.owner.logo}\r\n        locations={post.locations}\r\n        key={post._id}\r\n        title={post.title}\r\n        salary={post.salary}\r\n        id={post._id}\r\n        active={post.active}\r\n      />\r\n    ));\r\n  };\r\n\r\n  const renderImages = (images) => {\r\n    return images.map((img) => (\r\n      <Carousel.Item>\r\n        <img className=\"d-block w-100\" src={img} />\r\n      </Carousel.Item>\r\n    ));\r\n  };\r\n\r\n  const onChangePage = (page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCompany();\r\n    fetchPosts();\r\n  }, [page, id]);\r\n\r\n  return (\r\n    <MainLayout>\r\n      <CompanyTitleCard\r\n        title={company.name}\r\n        location={company.location}\r\n        description={company.description}\r\n        logo={company.logo}\r\n      />\r\n      <Carousel className=\"p-5 mr-5 ml-5\">{renderImages(images)}</Carousel>\r\n\r\n      <h3 className=\"ml-4\">Recent Jobs</h3>\r\n      <div className=\"row d-flex justify-content-start ml-3\">\r\n        {renderPosts(posts)}\r\n      </div>\r\n      <CustomPagination\r\n        current={page}\r\n        total={total}\r\n        onChangePage={onChangePage}\r\n        limit={limit}\r\n      />\r\n    </MainLayout>\r\n  );\r\n}\r\nexport default CompanyPage;\r\n","C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\utils\\notiToast.js",[],"C:\\Users\\MY LAPTOP\\OneDrive\\Desktop\\code\\Project 1\\job-search-ui\\src\\utils\\NotiToast.js",[],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":10,"column":10,"nodeType":"162","messageId":"163","endLine":10,"endColumn":12},{"ruleId":"160","severity":1,"message":"164","line":29,"column":9,"nodeType":"162","messageId":"163","endLine":29,"endColumn":15},{"ruleId":"165","severity":1,"message":"166","line":64,"column":6,"nodeType":"167","endLine":64,"endColumn":8,"suggestions":"168"},{"ruleId":"160","severity":1,"message":"169","line":12,"column":17,"nodeType":"162","messageId":"163","endLine":12,"endColumn":25},{"ruleId":"165","severity":1,"message":"170","line":73,"column":6,"nodeType":"167","endLine":73,"endColumn":21,"suggestions":"171"},{"ruleId":"165","severity":1,"message":"172","line":88,"column":7,"nodeType":"167","endLine":88,"endColumn":9,"suggestions":"173"},{"ruleId":"160","severity":1,"message":"169","line":14,"column":19,"nodeType":"162","messageId":"163","endLine":14,"endColumn":27},{"ruleId":"165","severity":1,"message":"170","line":107,"column":8,"nodeType":"167","endLine":107,"endColumn":14,"suggestions":"174"},{"ruleId":"160","severity":1,"message":"175","line":12,"column":8,"nodeType":"162","messageId":"163","endLine":12,"endColumn":17},{"ruleId":"165","severity":1,"message":"172","line":32,"column":8,"nodeType":"167","endLine":32,"endColumn":10,"suggestions":"176"},{"ruleId":"160","severity":1,"message":"177","line":1,"column":8,"nodeType":"162","messageId":"163","endLine":1,"endColumn":20},{"ruleId":"160","severity":1,"message":"178","line":2,"column":8,"nodeType":"162","messageId":"163","endLine":2,"endColumn":14},{"ruleId":"160","severity":1,"message":"169","line":16,"column":19,"nodeType":"162","messageId":"163","endLine":16,"endColumn":27},{"ruleId":"165","severity":1,"message":"179","line":53,"column":8,"nodeType":"167","endLine":53,"endColumn":14,"suggestions":"180"},{"ruleId":"160","severity":1,"message":"181","line":3,"column":32,"nodeType":"162","messageId":"163","endLine":3,"endColumn":43},{"ruleId":"160","severity":1,"message":"182","line":4,"column":20,"nodeType":"162","messageId":"163","endLine":4,"endColumn":30},{"ruleId":"183","severity":1,"message":"184","line":34,"column":21,"nodeType":"185","endLine":34,"endColumn":64},{"ruleId":"160","severity":1,"message":"169","line":13,"column":17,"nodeType":"162","messageId":"163","endLine":13,"endColumn":25},{"ruleId":"186","severity":1,"message":"187","line":53,"column":22,"nodeType":"188","messageId":"189","endLine":53,"endColumn":24},{"ruleId":"183","severity":1,"message":"184","line":75,"column":9,"nodeType":"185","endLine":75,"endColumn":52},{"ruleId":"165","severity":1,"message":"190","line":87,"column":6,"nodeType":"167","endLine":87,"endColumn":16,"suggestions":"191"},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"no-unused-vars","'io' is defined but never used.","Identifier","unusedVar","'socket' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'verifyAuth'. Either include it or remove the dependency array.","ArrayExpression",["194"],"'setLimit' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchPosts'. Either include it or remove the dependency array.",["195"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["196"],["197"],"'NotiToast' is defined but never used.",["198"],"'CustomNavbar' is defined but never used.","'Footer' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchApplications'. Either include it or remove the dependency array.",["199"],"'useNavigate' is defined but never used.","'useHistory' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'fetchCompany' and 'fetchPosts'. Either include them or remove the dependency array.",["200"],"no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"205","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},"Update the dependencies array to be: [verifyAuth]",{"range":"214","text":"215"},"Update the dependencies array to be: [fetchPosts, page, queries]",{"range":"216","text":"217"},"Update the dependencies array to be: [id]",{"range":"218","text":"219"},"Update the dependencies array to be: [fetchPosts, page]",{"range":"220","text":"221"},{"range":"222","text":"219"},"Update the dependencies array to be: [fetchApplications, page]",{"range":"223","text":"224"},"Update the dependencies array to be: [page, id, fetchCompany, fetchPosts]",{"range":"225","text":"226"},[2158,2160],"[verifyAuth]",[1798,1813],"[fetchPosts, page, queries]",[2996,2998],"[id]",[3665,3671],"[fetchPosts, page]",[1077,1079],[2320,2326],"[fetchApplications, page]",[2233,2243],"[page, id, fetchCompany, fetchPosts]"]